<Activity mc:Ignorable="sap sap2010" x:Class="Extraction_From_Appointement_Letter" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p4="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p5="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p6="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p7="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uoa="clr-namespace:UiPath.OmniPage.Activities;assembly=UiPath.OmniPage.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_FirstName" Type="OutArgument(x:String)" />
    <x:Property Name="out_LastName" Type="OutArgument(x:String)" />
    <x:Property Name="out_Gender" Type="OutArgument(x:String)" />
    <x:Property Name="out_MobileNumber" Type="OutArgument(x:String)" />
    <x:Property Name="out_Designation" Type="OutArgument(x:String)" />
    <x:Property Name="out_DateOfJoining" Type="OutArgument(x:String)" />
    <x:Property Name="out_Location" Type="OutArgument(x:String)" />
    <x:Property Name="out_CTC" Type="OutArgument(x:String)" />
    <x:Property Name="out_PanNumber" Type="OutArgument(x:String)" />
    <x:Property Name="out_BankName" Type="OutArgument(x:String)" />
    <x:Property Name="out_AccountNumber" Type="OutArgument(x:String)" />
    <x:Property Name="out_IFSCCode" Type="OutArgument(x:String)" />
    <x:Property Name="out_DOB" Type="OutArgument(x:String)" />
    <x:Property Name="in_TransactionItem" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1240,3322</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Extraction_From_Appointement_Letter_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.ValidationStation</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="74">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Extraction_From_Appointement_Letter" sap:VirtualizedContainerService.HintSize="995,3257" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="p7:DocumentTaxonomy" Name="Taxanomy" />
      <Variable x:TypeArguments="x:String" Name="DocumentText" />
      <Variable x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
      <Variable x:TypeArguments="x:String" Name="PdfDataPath" />
      <Variable x:TypeArguments="p5:ClassificationResult[]" Name="ClassificationResults" />
      <Variable x:TypeArguments="p5:ExtractionResult" Name="ExtractedResults" />
      <Variable x:TypeArguments="p5:ExtractionResult" Name="ValidatedExtractionResults" />
      <Variable x:TypeArguments="x:String" Name="ConvertedPdfDataPath" />
      <Variable x:TypeArguments="sd1:DataSet" Name="ExtractedDataTable" />
      <Variable x:TypeArguments="s:String[]" Name="FileForPath" />
      <Variable x:TypeArguments="x:String" Name="EmployeeName" />
      <Variable x:TypeArguments="sd1:DataTable" Name="AppointmentLetterDataTable" />
      <Variable x:TypeArguments="sd1:DataTable" Name="PayrollDeclarationDataTable" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="ListFileForPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign - For Test" sap:VirtualizedContainerService.HintSize="953,100" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="s:String[]">[FileForPath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(in_TransactionItem)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - Add to Collection" sap:VirtualizedContainerService.HintSize="953,51" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[FileForPath]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="FilesList" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body - To Add in Collection" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_14">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <AddToCollection x:TypeArguments="x:String" Collection="[ListFileForPath]" DisplayName="Add To Collection - ListFileForPath" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[FilesList]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message - Converted Array To String" sap:VirtualizedContainerService.HintSize="953,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Converted Array To String&quot;]" />
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - Folder Data Path" sap:VirtualizedContainerService.HintSize="953,2712" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[ListFileForPath]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="PDFFiles" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body - working with files" sap:VirtualizedContainerService.HintSize="917,2588" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Default="0" Name="PDFFiles_Index" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[PDFFiles.Contains(&quot;pdf&quot;)]" DisplayName="If - File is a pdf file" sap:VirtualizedContainerService.HintSize="875,2496" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence DisplayName="Sequence - Document Understanding" sap:VirtualizedContainerService.HintSize="839,2309" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="797,103" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[Taxanomy]" />
                  <p:DigitizeDocument ApplyOcrMigrated="True" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DetectCheckboxes="True" DisplayName="Digitize Document - Appointment Letter" DocumentObjectModel="[DocumentObjectModel]" DocumentPath="[PDFFiles]" DocumentText="[DocumentText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="797,293" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
                    <p:DigitizeDocument.OCREngine>
                      <ActivityFunc x:TypeArguments="sd:Image, x:String, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                        <ActivityFunc.Argument1>
                          <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                        </ActivityFunc.Argument1>
                        <ActivityFunc.Argument2>
                          <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                        </ActivityFunc.Argument2>
                        <uoa:OmniPageOCR Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" BundleType="Basic" ComputeSkewAngle="False" DisplayName="OmniPage OCR" ExtractHandprintedText="False" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,22" sap2010:WorkflowViewState.IdRef="OmniPageOCR_1" Image="[Image]" PredictionId="[PredictionId]" />
                      </ActivityFunc>
                    </p:DigitizeDocument.OCREngine>
                  </p:DigitizeDocument>
                  <p1:ClassifyDocumentScope ClassificationResults="[ClassificationResults]" DisplayName="Classify Document Scope - Whether it is a Appointement Letter or Payroll Declaration" DocumentObjectModel="[DocumentObjectModel]" DocumentPath="[PDFFiles]" DocumentText="[DocumentText]" sap:VirtualizedContainerService.HintSize="797,434" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[Taxanomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9772c6c5ef0d48378ef2cbc9de067bad&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;GauravCompany.HR.AppointmentLetter&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;GauravCompany.HR.AppointmentLetter&quot;,&quot;ClassifierDocumentTypeId&quot;:&quot;&quot;,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;GauravCompany.HR.DeclarationForm&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;GauravCompany.HR.DeclarationForm&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI9772c6c5ef0d48378ef2cbc9de067bad&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UI9772c6c5ef0d48378ef2cbc9de067bad&quot;:[]}}">
                    <p1:ClassifyDocumentScope.Classifiers>
                      <p1:KeywordBasedClassifier HumanValidatedData="{x:Null}" LearningData="{x:Null}" DisplayName="Keyword Based Classifier" sap:VirtualizedContainerService.HintSize="234,113" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifier_1" LearningFilePath="DocumentProcessing\Keywordclassifier.json" PersistenceId="UI9772c6c5ef0d48378ef2cbc9de067bad">
                        <p1:KeywordBasedClassifier.ClassifierResult>
                          <OutArgument x:TypeArguments="p2:ClassifierResult">
                            <DelegateArgumentReference x:TypeArguments="p2:ClassifierResult">
                              <DelegateOutArgument x:TypeArguments="p2:ClassifierResult" Name="ClassifierResult" />
                            </DelegateArgumentReference>
                          </OutArgument>
                        </p1:KeywordBasedClassifier.ClassifierResult>
                        <p1:KeywordBasedClassifier.DocumentObjectModel>
                          <InArgument x:TypeArguments="p3:Document">
                            <DelegateArgumentValue x:TypeArguments="p3:Document">
                              <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p1:KeywordBasedClassifier.DocumentObjectModel>
                        <p1:KeywordBasedClassifier.DocumentPath>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p1:KeywordBasedClassifier.DocumentPath>
                        <p1:KeywordBasedClassifier.DocumentText>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p1:KeywordBasedClassifier.DocumentText>
                        <p1:KeywordBasedClassifier.DocumentTypes>
                          <InArgument x:TypeArguments="p2:ClassifierDocumentType[]">
                            <DelegateArgumentValue x:TypeArguments="p2:ClassifierDocumentType[]">
                              <DelegateInArgument x:TypeArguments="p2:ClassifierDocumentType[]" Name="DocumentTypes" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p1:KeywordBasedClassifier.DocumentTypes>
                        <p1:KeywordBasedClassifier.PredictionId>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p1:KeywordBasedClassifier.PredictionId>
                      </p1:KeywordBasedClassifier>
                    </p1:ClassifyDocumentScope.Classifiers>
                  </p1:ClassifyDocumentScope>
                  <p4:DataExtractionScope DocumentTypeId="{x:Null}" ClassificationResult="[ClassificationResults(0)]" DisplayName="Data Extraction Scope - Extracting Data" DocumentObjectModel="[DocumentObjectModel]" DocumentPath="[PDFFiles]" DocumentText="[DocumentText]" ExtractionResult="[ExtractedResults]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="797,482" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" Taxonomy="[Taxanomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIa8c58a95a6ef4763b1b8b347cd735adf&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;GauravCompany.HR.AppointmentLetter&quot;:{&quot;FieldMappings&quot;:{&quot;GauravCompany.HR.AppointmentLetter.Designation&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GauravCompany.HR.AppointmentLetter.Designation&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GauravCompany.HR.AppointmentLetter.DateofJoining&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GauravCompany.HR.AppointmentLetter.DateofJoining&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GauravCompany.HR.AppointmentLetter.Location&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GauravCompany.HR.AppointmentLetter.Location&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GauravCompany.HR.AppointmentLetter.CTC&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GauravCompany.HR.AppointmentLetter.CTC&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null},&quot;GauravCompany.HR.DeclarationForm&quot;:{&quot;FieldMappings&quot;:{&quot;GauravCompany.HR.DeclarationForm.FirstName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GauravCompany.HR.DeclarationForm.FirstName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GauravCompany.HR.DeclarationForm.LastName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GauravCompany.HR.DeclarationForm.LastName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GauravCompany.HR.DeclarationForm.Gender&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GauravCompany.HR.DeclarationForm.Gender&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GauravCompany.HR.DeclarationForm.PANNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GauravCompany.HR.DeclarationForm.PANNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GauravCompany.HR.DeclarationForm.BankName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GauravCompany.HR.DeclarationForm.BankName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GauravCompany.HR.DeclarationForm.AccountNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GauravCompany.HR.DeclarationForm.AccountNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GauravCompany.HR.DeclarationForm.IFSCCode&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GauravCompany.HR.DeclarationForm.IFSCCode&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GauravCompany.HR.DeclarationForm.MobileNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GauravCompany.HR.DeclarationForm.MobileNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;GauravCompany.HR.DeclarationForm.DOB&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;GauravCompany.HR.DeclarationForm.DOB&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UIa8c58a95a6ef4763b1b8b347cd735adf&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UIa8c58a95a6ef4763b1b8b347cd735adf&quot;:[]}}">
                    <p4:DataExtractionScope.Extractors>
                      <p4:FormExtractor SerializedSignatureFields="{x:Null}" ApiKey="iNWrYlOq49QFd4bMP3wqAD20O+3BKA0KLx39DGAfso7+L3QCotWYS8h+a8RYC64Qgv7i3Nsmmh85YmcwQHX3EQ==" DisplayName="Form Extractor" Endpoint="https://du.uipath.com/svc/formextractor" sap:VirtualizedContainerService.HintSize="234,161" sap2010:WorkflowViewState.IdRef="FormExtractor_1" MinOverlapPercentage="65" PersistenceId="UIa8c58a95a6ef4763b1b8b347cd735adf" SerializedSettings="{}{&quot;DocTypeSettings&quot;:[{&quot;DocumentTypeId&quot;:&quot;GauravCompany.HR.AppointmentLetter&quot;,&quot;SignatureFields&quot;:[],&quot;HandwritingFields&quot;:[],&quot;BooleanSynonymsForYes&quot;:[],&quot;BooleanSynonymsForNo&quot;:[],&quot;CaseSensitiveSynonyms&quot;:false},{&quot;DocumentTypeId&quot;:&quot;GauravCompany.HR.DeclarationForm&quot;,&quot;SignatureFields&quot;:[],&quot;HandwritingFields&quot;:[],&quot;BooleanSynonymsForYes&quot;:[],&quot;BooleanSynonymsForNo&quot;:[],&quot;CaseSensitiveSynonyms&quot;:false}]}" SerializedTemplates="[{&quot;DocumentTypeId&quot;:&quot;GauravCompany.HR.AppointmentLetter&quot;,&quot;FormId&quot;:&quot;033f16ca&quot;,&quot;FormName&quot;:&quot;My Appointment Letter&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;EXCELCULT&quot;,&quot;Box&quot;:[34.41,280.92,50.47,15.34]},{&quot;Text&quot;:&quot;Subject:&quot;,&quot;Box&quot;:[117.83,72.0,37.36,13.59]},{&quot;Text&quot;:&quot;Appointment&quot;,&quot;Box&quot;:[117.83,112.08,58.48,13.59]},{&quot;Text&quot;:&quot;Letter&quot;,&quot;Box&quot;:[117.83,173.28,26.37,13.59]},{&quot;Text&quot;:&quot;We&quot;,&quot;Box&quot;:[139.83,72.0,15.13,13.56]},{&quot;Text&quot;:&quot;are&quot;,&quot;Box&quot;:[139.83,89.76,14.41,13.56]},{&quot;Text&quot;:&quot;pleased&quot;,&quot;Box&quot;:[139.83,107.04,34.93,13.56]},{&quot;Text&quot;:&quot;to&quot;,&quot;Box&quot;:[139.83,144.84,8.29,13.56]},{&quot;Text&quot;:&quot;appoint&quot;,&quot;Box&quot;:[139.83,155.88,32.75,13.56]},{&quot;Text&quot;:&quot;you&quot;,&quot;Box&quot;:[139.83,191.52,15.97,13.56]},{&quot;Text&quot;:&quot;as&quot;,&quot;Box&quot;:[139.83,210.36,10.49,13.56]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;GauravCompany.HR.AppointmentLetter.Designation&quot;,&quot;Box&quot;:[166.7964,238.859,61.5365,15.3841]},{&quot;Field&quot;:&quot;GauravCompany.HR.AppointmentLetter.DateofJoining&quot;,&quot;Box&quot;:[189.4678,237.2396,76.111,16.1938]},{&quot;Field&quot;:&quot;GauravCompany.HR.AppointmentLetter.Location&quot;,&quot;Box&quot;:[212.9488,237.2396,89.0661,17.0035]},{&quot;Field&quot;:&quot;GauravCompany.HR.AppointmentLetter.CTC&quot;,&quot;Box&quot;:[234.8105,237.2396,89.8757,16.1938]}],&quot;Tables&quot;:[]},{&quot;Page&quot;:1,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;Acceptance&quot;,&quot;Box&quot;:[517.43,225.6,53.28,13.59]},{&quot;Text&quot;:&quot;of&quot;,&quot;Box&quot;:[517.43,281.64,8.92,13.59]},{&quot;Text&quot;:&quot;Offer&quot;,&quot;Box&quot;:[517.43,293.16,22.65,13.59]},{&quot;Text&quot;:&quot;Employment&quot;,&quot;Box&quot;:[517.43,330.12,56.92,13.59]},{&quot;Text&quot;:&quot;agree&quot;,&quot;Box&quot;:[553.94,78.72,24.24,12.95]},{&quot;Text&quot;:&quot;employment&quot;,&quot;Box&quot;:[553.94,151.44,51.71,12.95]},{&quot;Text&quot;:&quot;above-mentioned&quot;,&quot;Box&quot;:[553.94,239.4,73.44,12.95]}],&quot;Fields&quot;:[],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[]}},{&quot;DocumentTypeId&quot;:&quot;GauravCompany.HR.DeclarationForm&quot;,&quot;FormId&quot;:&quot;4a437714&quot;,&quot;FormName&quot;:&quot;My Declaration Form&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;EXCELCULT&quot;,&quot;Box&quot;:[39.66,264.77,82.33,18.0]},{&quot;Text&quot;:&quot;Payroll&quot;,&quot;Box&quot;:[87.86,266.33,36.65,10.36]},{&quot;Text&quot;:&quot;Related&quot;,&quot;Box&quot;:[87.86,306.14,39.74,10.36]},{&quot;Text&quot;:&quot;PRINT&quot;,&quot;Box&quot;:[100.15,102.08,27.0,8.44]},{&quot;Text&quot;:&quot;Personal&quot;,&quot;Box&quot;:[133.15,65.39,38.12,8.44]},{&quot;Text&quot;:&quot;Details&quot;,&quot;Box&quot;:[133.15,106.04,29.48,8.44]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;GauravCompany.HR.DeclarationForm.FirstName&quot;,&quot;Box&quot;:[152.2535,191.7266,76.1267,14.0975]},{&quot;Field&quot;:&quot;GauravCompany.HR.DeclarationForm.LastName&quot;,&quot;Box&quot;:[152.9584,426.4508,109.256,12.6878]},{&quot;Field&quot;:&quot;GauravCompany.HR.DeclarationForm.Gender&quot;,&quot;Box&quot;:[231.1998,192.4315,86.6999,11.278]},{&quot;Field&quot;:&quot;GauravCompany.HR.DeclarationForm.PANNumber&quot;,&quot;Box&quot;:[205.1193,191.7266,101.5023,19.0317]},{&quot;Field&quot;:&quot;GauravCompany.HR.DeclarationForm.BankName&quot;,&quot;Box&quot;:[248.1168,340.4557,86.6999,11.278]},{&quot;Field&quot;:&quot;GauravCompany.HR.DeclarationForm.AccountNumber&quot;,&quot;Box&quot;:[281.9509,340.4557,69.078,9.8683]},{&quot;Field&quot;:&quot;GauravCompany.HR.DeclarationForm.IFSCCode&quot;,&quot;Box&quot;:[299.5729,340.4557,103.617,10.5732]},{&quot;Field&quot;:&quot;GauravCompany.HR.DeclarationForm.MobileNumber&quot;,&quot;Box&quot;:[229.79,425.7459,79.6511,11.9829]},{&quot;Field&quot;:&quot;GauravCompany.HR.DeclarationForm.DOB&quot;,&quot;Box&quot;:[169.3622,192.6802,68.1131,14.7272]}],&quot;Tables&quot;:[]},{&quot;Page&quot;:1,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;Medical&quot;,&quot;Box&quot;:[87.02,209.45,40.37,10.36]},{&quot;Text&quot;:&quot;Insurance&quot;,&quot;Box&quot;:[87.02,252.87,52.11,10.36]},{&quot;Text&quot;:&quot;Registration&quot;,&quot;Box&quot;:[87.02,307.94,64.23,10.36]},{&quot;Text&quot;:&quot;Form&quot;,&quot;Box&quot;:[87.02,375.23,27.43,10.36]},{&quot;Text&quot;:&quot;Dependent&quot;,&quot;Box&quot;:[193.22,76.22,56.86,10.36]},{&quot;Text&quot;:&quot;Relationship&quot;,&quot;Box&quot;:[176.06,428.11,66.11,10.36]},{&quot;Text&quot;:&quot;Date&quot;,&quot;Box&quot;:[182.42,362.95,23.87,10.36]}],&quot;Fields&quot;:[],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[]}}]" Timeout="100000">
                        <p4:FormExtractor.DocumentBounds>
                          <InArgument x:TypeArguments="p5:ResultsDocumentBounds">
                            <DelegateArgumentValue x:TypeArguments="p5:ResultsDocumentBounds">
                              <DelegateInArgument x:TypeArguments="p5:ResultsDocumentBounds" Name="DocumentBounds" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:FormExtractor.DocumentBounds>
                        <p4:FormExtractor.DocumentObjectModel>
                          <InArgument x:TypeArguments="p3:Document">
                            <DelegateArgumentValue x:TypeArguments="p3:Document">
                              <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:FormExtractor.DocumentObjectModel>
                        <p4:FormExtractor.DocumentPath>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:FormExtractor.DocumentPath>
                        <p4:FormExtractor.DocumentText>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:FormExtractor.DocumentText>
                        <p4:FormExtractor.ExtractorDocumentType>
                          <InArgument x:TypeArguments="p6:ExtractorDocumentType">
                            <DelegateArgumentValue x:TypeArguments="p6:ExtractorDocumentType">
                              <DelegateInArgument x:TypeArguments="p6:ExtractorDocumentType" Name="ExtractorDocumentType" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:FormExtractor.ExtractorDocumentType>
                        <p4:FormExtractor.ExtractorResult>
                          <OutArgument x:TypeArguments="p6:ExtractorResult">
                            <DelegateArgumentReference x:TypeArguments="p6:ExtractorResult">
                              <DelegateOutArgument x:TypeArguments="p6:ExtractorResult" Name="ExtractorResult" />
                            </DelegateArgumentReference>
                          </OutArgument>
                        </p4:FormExtractor.ExtractorResult>
                        <p4:FormExtractor.PredictionId>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p4:FormExtractor.PredictionId>
                      </p4:FormExtractor>
                    </p4:DataExtractionScope.Extractors>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </p4:DataExtractionScope>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="797,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,457" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <p:PresentValidationStation AutomaticExtractionResults="[ExtractedResults]" DisplayName="Present Validation Station" DocumentObjectModel="[DocumentObjectModel]" DocumentPath="[PDFFiles]" DocumentText="[DocumentText]" sap:VirtualizedContainerService.HintSize="334,365" sap2010:WorkflowViewState.IdRef="PresentValidationStation_1" ShowOnlyRelevantPageRange="False" Taxonomy="[Taxanomy]" ValidatedExtractionResults="[ValidatedExtractionResults]" />
                      </Sequence>
                    </ui:CommentOut.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                  <p4:ExportExtractionResults DataSet="[ExtractedDataTable]" DisplayName="Export Extraction Results - Getting Data in DataTable" ExtractionResult="[ExtractedResults]" sap:VirtualizedContainerService.HintSize="797,173" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False" IncludeOCRConfidence="False" />
                  <If Condition="[ExtractedDataTable.Tables(0).ColumnCount = 4]" DisplayName="If - Add Values" sap:VirtualizedContainerService.HintSize="797,441" sap2010:WorkflowViewState.IdRef="If_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Sequence - Reading Appointment Letter" sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign - AppointmentLetterDataTable" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd1:DataTable">[AppointmentLetterDataTable]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd1:DataTable">[ExtractedDataTable.Tables(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message - Appointment Letter" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Extracted All Data from Appointment Letter.&quot;]" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Sequence - Reading Payroll Declaration" sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign - PayrollDeclarationDataTable" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd1:DataTable">[PayrollDeclarationDataTable]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd1:DataTable">[ExtractedDataTable.Tables(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message - Payroll Declaration" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Extracted All Data From Payroll Declaration.&quot;]" />
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:MultipleAssign DisplayName="Multiple Assign - OutputVariables" sap:VirtualizedContainerService.HintSize="953,51" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_FirstName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[PayrollDeclarationDataTable.Rows(0)("First Name").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_LastName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[PayrollDeclarationDataTable.Rows(0)("Last Name").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_Gender]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[PayrollDeclarationDataTable.Rows(0)("Gender").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_MobileNumber]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[PayrollDeclarationDataTable.Rows(0)("Mobile Number").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_Designation]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[AppointmentLetterDataTable.Rows(0)("Designation").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_DateOfJoining]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[AppointmentLetterDataTable.Rows(0)("Date of Joining").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_Location]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[AppointmentLetterDataTable.Rows(0)("Location").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_CTC]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[AppointmentLetterDataTable.Rows(0)("CTC").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_PanNumber]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[PayrollDeclarationDataTable.Rows(0)("PAN Number").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_BankName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[PayrollDeclarationDataTable.Rows(0)("Bank Name").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_AccountNumber]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[PayrollDeclarationDataTable.Rows(0)("Account Number").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_IFSCCode]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[PayrollDeclarationDataTable.Rows(0)("IFSC Code").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_DOB]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[PayrollDeclarationDataTable.Rows(0)("DOB").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
  </Sequence>
</Activity>